version: "3.3"

networks:
  webnet:

services:
##nginx proxy
  espier-nginx-proxy:
    image: nginx:stable-alpine
    ports:
      - "8080:8080"
      - "8084:8004"
    links:
      - espier-bloated-web
      - phpmyadmin
      - ecshop-admin-build
    volumes:
      - "./config/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./ecshopx-admin/app/dist/star:/usr/share/nginx/html"
    networks:
      - webnet

###espier-bloated-web
  espier-bloated-web:
    environment:
      APP_ENV: dev
      CONTAINER_ROLE: web
    entrypoint: php-fpm
    # replace username/repo:tag with your name and image details
    image: "${PHP_COMPOSER_IMAGE}"
    ports:
      - "8085:8005" 
    links:
      - mysql
      - neo4j
      - redis
    volumes:
      - "./config/phpfpm/php-fpm.conf:/usr/local/etc/php-fpm.conf"
      - "./config/phpfpm/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf"
      - "./config/phpfpm/php.ini:/usr/local/etc/php/php.ini"
      - "./config/phpfpm/docker-php-ext-swoole-compiler.ini:/usr/local/etc/php/conf.d/docker-php-ext-swoole-compiler.ini"
      - "./ecshopx-api:/app"
    networks:
      - webnet
###espier-bloated-scheduler
  # espier-bloated-scheduler:
  #   environment:
  #     APP_ENV: production
  #     CONTAINER_ROLE: scheduler
  #   # replace username/repo:tag with your name and image details
  #   image: "${PHP_COMPOSER_IMAGE}"
  #   deploy:
  #     placement:
  #       constraints: [node.Labels.node_type == job]
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
  #   volumes:
  #     - "./bloated/files/scheduler/supervisor.d/super-crontab.ini:/etc/supervisor.d/super-crontab.ini"
  #     - "./bloated/files/scheduler/crontabs/root:/var/spool/cron/crontabs/root"
  #     - "./bloated/files/laravel/.env:/usr/src/html/.env.production"
  #     - "./ecshopx-api:/app"
  #     - "./logs/bloated-scheduler:/app/storage/logs"
  #   networks:
  #     - webnet
###espier-bloated-worker
  # espier-bloated-worker:
  #   environment:
  #     APP_ENV: production
  #     CONTAINER_ROLE: worker
  #   # replace username/repo:tag with your name and image details
  #   image: "${PHP_COMPOSER_IMAGE}"
  #   deploy:
  #     placement:
  #       constraints: [node.Labels.node_type == job]
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
  #   volumes:
  #     - "./bloated/files/worker/supervisor.d/super-queue.ini:/etc/supervisor.d/super-queue.ini"
  #     - "./bloated/files/laravel/.env:/usr/src/html/.env.production"
  #     - "./ecshopx-api:/app"
  #     - "./logs/bloated-worker:/app/storage/logs"
  #   networks:
  #     - webnet

  # espier-bloated-websocket:
  #   environment:
  #     APP_ENV: production
  #     CONTAINER_ROLE: websocket
  #   # replace username/repo:tag with your name and image details
  #   image: "${PHP_COMPOSER_IMAGE}"
  #   deploy:
  #     placement:
  #       constraints: [node.Labels.node_type == job]
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
  #     #resources:
  #     #  limits:
  #     #    cpus: "0.5"
  #     #    memory: 100M
  #   volumes:
  #     - "./bloated/files/websocket/supervisor.d/super-websocket.ini:/etc/supervisor.d/super-websocket.ini"
  #     - "./bloated/files/laravel/.env:/usr/src/html/.env.production"
  #     - "./ecshopx-api:/app"
  #     - "./logs/bloated-websocket:/app/storage/logs"
  #   networks:
  #     - webnet

  # espier-retail-manage:
  #   image: "nginx:stable-alpine"
  #   deploy:
  #     placement:
  #       constraints: [node.Labels.node_type == web]
  #     replicas: 2
  #     restart_policy:
  #       condition: on-failure
  #     #resources:
  #     #  limits:
  #     #    cpus: "0.5"
  #     #    memory: 100M
  #   ports:
  #     - "8955:80"
  #   volumes:
  #     - "./site-retail-manage/files/nginx/default.conf:/etc/nginx/conf.d/default.conf"
  #     - "./espier-shop/app/dist/star:/usr/share/nginx/html"
  #   networks:
  #     - webnet

  # espier-pc:
  #   image: "registry.cn-hangzhou.aliyuncs.com/espier/site-pc:${ESPIER_PC_TAG}"
  #   deploy:
  #     placement:
  #       constraints: [node.Labels.node_type == web]
  #     replicas: 2
  #     restart_policy:
  #       condition: on-failure
  #     #resources:
  #     #  limits:
  #     #    cpus: "0.5"
  #     #    memory: 100M
  #   volumes:
  #     - "./site-pc/files/nginx/default.conf:/etc/nginx/conf.d/default.conf"
  #   networks:
  #     - webnet


  redis:
    image: 'bitnami/redis:4.0.14-r61'
    ports:
      - '6379'
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=123456
    volumes:
      - './data/redis:/bitnami'
    networks:
      - webnet

  neo4j:
    image: 'neo4j'
    ports:
      - '7474:7474'
      - '7687:7687'

    volumes:
      - './data/neo4j:/data'
    networks:
      - webnet

  mysql:
    image: mysql:5.7
    hostname: mysql
    ports:
      - "8806:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - webnet
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - "8004:80"
    links:
      - mysql
    environment:
      - PMA_HOST=mysql
    networks:
      - webnet    

  ecshop-admin-build:
    image: node:8-alpine
    environment:
      PRODUCT_MODEL: standard
      IS_SAAS: "false"
      PORT: 4000
      BUILD_DIR: /usr/share/nginx/html/app
    entrypoint:
      - sh 
      - /usr/share/nginx/html/docker/build_dev.sh
    volumes:
      - "./ecshopx-admin:/usr/share/nginx/html"
    networks:
      - webnet
#- "./bloated/files/scheduler/crontabs/root:/var/spool/cron/crontabs/root"
